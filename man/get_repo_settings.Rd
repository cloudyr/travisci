% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/repo.R
\name{get_repo_settings}
\alias{get_repo_settings}
\alias{set_repo_settings}
\title{Get/Set Repo Settings}
\usage{
get_repo_settings(repo, ...)

set_repo_settings(repo, settings = list(), ...)
}
\arguments{
\item{repo}{A numeric repository ID (such as returned by this function), a character string specifying a GitHub repository \dQuote{slug} (e.g., \samp{ghusername/ghreponame}), or an object of class \dQuote{travis_repo}.}

\item{...}{Additional arguments passed to \code{\link{travisHTTP}}.}

\item{settings}{A list containing named settings and their values. See results of \code{get_repo_settings} and \href{http://docs.travis-ci.com/api/#settings:-general}{the API documentation} for details. The response from either \code{get_repo_settings} or \code{set_repo_settings} can be passed directly as the value of this argument.}
}
\value{
A list of settings.
}
\description{
Get or set repository settings
}
\details{
\code{get_repo_settings} retrieves Travis-CI settings for a given repository. \code{set_repo_settings} modifies those settings based upon a list of input values. Use \code{\link{get_env_vars}} and \code{\link{add_env_vars}} to modify environment variables used in a build. Most of these features can also be modified using a \samp{.travis.yml} file in the GitHub repository itself (see \href{http://docs.travis-ci.com/user/languages/r/}{Building an R Project} in the Travis CI documentation for details).
}
\examples{
\dontrun{
# authenticate based on Sys.setenv("GITHUB_TOKEN" = "sometoken")
auth_travis()

# get settings
g <- get_repo_settings(repo = "cloudyr/travisci")

# pass modified settings list
g[[1]] <- TRUE
set_repo_settings(repo = "cloudyr/travisci", g)

# specify new settings individually
set_repo_settings(repo = "cloudyr/travisci", list("builds_only_with_travis_yml" = FALSE))
}
}
\seealso{
\code{\link{get_builds}}

\code{\link{get_repo}}, \code{\link{get_env_vars}}
}

