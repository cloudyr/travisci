% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/environment.R
\name{get_env_vars}
\alias{get_env_vars}
\alias{add_env_vars}
\alias{update_env_vars}
\alias{delete_env_var}
\title{Manage environment variables}
\usage{
get_env_vars(repo, id, ...)

add_env_vars(repo, evar, public = TRUE, ...)

update_env_vars(repo, id, evar, public, ...)

delete_env_var(repo, id, ...)
}
\arguments{
\item{repo}{A character string specifying a repo slug (i.e., \samp{cloudyr/travisci}) a numeric Travis-CI repository ID, or an object of class \dQuote{travis_repo}. If a slug is used, it will be implicitly converted to a repository ID in some cases where only the latter is accepted.}

\item{id}{An alphanumeric ID for a given environment variable or an object of class \dQuote{travis_envvar}, for example as returned by one of these functions.}

\item{...}{Additional arguments passed to \code{\link{travisHTTP}}.}

\item{evar}{A list of environment variables as key-value pairs.}
}
\value{
A list of objects of class \dQuote{travis_envvar}, except for \code{delete_env_vars}, which returns a logical.
}
\description{
These functions retrieve and modify environment variables for the Travis-CI build environment, as a possible alternative to specifying them in a \samp{.travis.yml} file.
}
\details{
This can be useful for checking, creating, updating, or deleting environment variables used as build settings. See href{http://docs.travis-ci.com/user/environment-variables/}{the API documentation} for full details.
}
\examples{
\dontrun{
# authenticate based on Sys.setenv("GITHUB_TOKEN" = "sometoken")
auth_travis()

# get environment variables for a repo
get_env_vars("cloudyr/travisci")

# get a specific environment variable based on its ID
get_env_vars("cloudyr/travisci", id = 12345)

# set environment variables
e <- add_env_vars("cloudyr/travisci", var = list(VAR1 = "value1", VAR2 = "value2"))

# update an environment variable
update_env_vars("cloudyr/travisci", id = e$id, 
                 var = list(VAR1 = "newvalue")

# delete an environment variable
delete_env_vars("cloudyr/travisci", id = e$id)

}
}
\seealso{
\code{\link{get_encryption_key}}, for handling encrypted environment variables
}
